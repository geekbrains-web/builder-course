{"id":"src/main.js","dependencies":[{"name":"/Users/oleg/Projects/course-gb/.babelrc","includedInParent":true,"mtime":1611500018201},{"name":"/Users/oleg/Projects/course-gb/sample 6 - parcel/package.json","includedInParent":true,"mtime":1611499641585},{"name":"./datecalc.js","loc":{"line":1,"column":38},"parent":"/Users/oleg/Projects/course-gb/sample 6 - parcel/src/main.js","resolved":"/Users/oleg/Projects/course-gb/sample 6 - parcel/src/datecalc.js"},{"name":"./utils.js","loc":{"line":2,"column":28},"parent":"/Users/oleg/Projects/course-gb/sample 6 - parcel/src/main.js","resolved":"/Users/oleg/Projects/course-gb/sample 6 - parcel/src/utils.js"}],"generated":{"js":"\"use strict\";\n\nvar _datecalc = require(\"./datecalc.js\");\n\nvar _utils = require(\"./utils.js\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _decorate(decorators, factory, superClass, mixins) { var api = _getDecoratorsApi(); if (mixins) { for (var i = 0; i < mixins.length; i++) { api = mixins[i](api); } } var r = factory(function initialize(O) { api.initializeInstanceElements(O, decorated.elements); }, superClass); var decorated = api.decorateClass(_coalesceClassElements(r.d.map(_createElementDescriptor)), decorators); api.initializeClassElements(r.F, decorated.elements); return api.runClassFinishers(r.F, decorated.finishers); }\n\nfunction _getDecoratorsApi() { _getDecoratorsApi = function _getDecoratorsApi() { return api; }; var api = { elementsDefinitionOrder: [[\"method\"], [\"field\"]], initializeInstanceElements: function initializeInstanceElements(O, elements) { [\"method\", \"field\"].forEach(function (kind) { elements.forEach(function (element) { if (element.kind === kind && element.placement === \"own\") { this.defineClassElement(O, element); } }, this); }, this); }, initializeClassElements: function initializeClassElements(F, elements) { var proto = F.prototype; [\"method\", \"field\"].forEach(function (kind) { elements.forEach(function (element) { var placement = element.placement; if (element.kind === kind && (placement === \"static\" || placement === \"prototype\")) { var receiver = placement === \"static\" ? F : proto; this.defineClassElement(receiver, element); } }, this); }, this); }, defineClassElement: function defineClassElement(receiver, element) { var descriptor = element.descriptor; if (element.kind === \"field\") { var initializer = element.initializer; descriptor = { enumerable: descriptor.enumerable, writable: descriptor.writable, configurable: descriptor.configurable, value: initializer === void 0 ? void 0 : initializer.call(receiver) }; } Object.defineProperty(receiver, element.key, descriptor); }, decorateClass: function decorateClass(elements, decorators) { var newElements = []; var finishers = []; var placements = { static: [], prototype: [], own: [] }; elements.forEach(function (element) { this.addElementPlacement(element, placements); }, this); elements.forEach(function (element) { if (!_hasDecorators(element)) return newElements.push(element); var elementFinishersExtras = this.decorateElement(element, placements); newElements.push(elementFinishersExtras.element); newElements.push.apply(newElements, elementFinishersExtras.extras); finishers.push.apply(finishers, elementFinishersExtras.finishers); }, this); if (!decorators) { return { elements: newElements, finishers: finishers }; } var result = this.decorateConstructor(newElements, decorators); finishers.push.apply(finishers, result.finishers); result.finishers = finishers; return result; }, addElementPlacement: function addElementPlacement(element, placements, silent) { var keys = placements[element.placement]; if (!silent && keys.indexOf(element.key) !== -1) { throw new TypeError(\"Duplicated element (\" + element.key + \")\"); } keys.push(element.key); }, decorateElement: function decorateElement(element, placements) { var extras = []; var finishers = []; for (var decorators = element.decorators, i = decorators.length - 1; i >= 0; i--) { var keys = placements[element.placement]; keys.splice(keys.indexOf(element.key), 1); var elementObject = this.fromElementDescriptor(element); var elementFinisherExtras = this.toElementFinisherExtras((0, decorators[i])(elementObject) || elementObject); element = elementFinisherExtras.element; this.addElementPlacement(element, placements); if (elementFinisherExtras.finisher) { finishers.push(elementFinisherExtras.finisher); } var newExtras = elementFinisherExtras.extras; if (newExtras) { for (var j = 0; j < newExtras.length; j++) { this.addElementPlacement(newExtras[j], placements); } extras.push.apply(extras, newExtras); } } return { element: element, finishers: finishers, extras: extras }; }, decorateConstructor: function decorateConstructor(elements, decorators) { var finishers = []; for (var i = decorators.length - 1; i >= 0; i--) { var obj = this.fromClassDescriptor(elements); var elementsAndFinisher = this.toClassDescriptor((0, decorators[i])(obj) || obj); if (elementsAndFinisher.finisher !== undefined) { finishers.push(elementsAndFinisher.finisher); } if (elementsAndFinisher.elements !== undefined) { elements = elementsAndFinisher.elements; for (var j = 0; j < elements.length - 1; j++) { for (var k = j + 1; k < elements.length; k++) { if (elements[j].key === elements[k].key && elements[j].placement === elements[k].placement) { throw new TypeError(\"Duplicated element (\" + elements[j].key + \")\"); } } } } } return { elements: elements, finishers: finishers }; }, fromElementDescriptor: function fromElementDescriptor(element) { var obj = { kind: element.kind, key: element.key, placement: element.placement, descriptor: element.descriptor }; var desc = { value: \"Descriptor\", configurable: true }; Object.defineProperty(obj, Symbol.toStringTag, desc); if (element.kind === \"field\") obj.initializer = element.initializer; return obj; }, toElementDescriptors: function toElementDescriptors(elementObjects) { if (elementObjects === undefined) return; return _toArray(elementObjects).map(function (elementObject) { var element = this.toElementDescriptor(elementObject); this.disallowProperty(elementObject, \"finisher\", \"An element descriptor\"); this.disallowProperty(elementObject, \"extras\", \"An element descriptor\"); return element; }, this); }, toElementDescriptor: function toElementDescriptor(elementObject) { var kind = String(elementObject.kind); if (kind !== \"method\" && kind !== \"field\") { throw new TypeError('An element descriptor\\'s .kind property must be either \"method\" or' + ' \"field\", but a decorator created an element descriptor with' + ' .kind \"' + kind + '\"'); } var key = _toPropertyKey(elementObject.key); var placement = String(elementObject.placement); if (placement !== \"static\" && placement !== \"prototype\" && placement !== \"own\") { throw new TypeError('An element descriptor\\'s .placement property must be one of \"static\",' + ' \"prototype\" or \"own\", but a decorator created an element descriptor' + ' with .placement \"' + placement + '\"'); } var descriptor = elementObject.descriptor; this.disallowProperty(elementObject, \"elements\", \"An element descriptor\"); var element = { kind: kind, key: key, placement: placement, descriptor: Object.assign({}, descriptor) }; if (kind !== \"field\") { this.disallowProperty(elementObject, \"initializer\", \"A method descriptor\"); } else { this.disallowProperty(descriptor, \"get\", \"The property descriptor of a field descriptor\"); this.disallowProperty(descriptor, \"set\", \"The property descriptor of a field descriptor\"); this.disallowProperty(descriptor, \"value\", \"The property descriptor of a field descriptor\"); element.initializer = elementObject.initializer; } return element; }, toElementFinisherExtras: function toElementFinisherExtras(elementObject) { var element = this.toElementDescriptor(elementObject); var finisher = _optionalCallableProperty(elementObject, \"finisher\"); var extras = this.toElementDescriptors(elementObject.extras); return { element: element, finisher: finisher, extras: extras }; }, fromClassDescriptor: function fromClassDescriptor(elements) { var obj = { kind: \"class\", elements: elements.map(this.fromElementDescriptor, this) }; var desc = { value: \"Descriptor\", configurable: true }; Object.defineProperty(obj, Symbol.toStringTag, desc); return obj; }, toClassDescriptor: function toClassDescriptor(obj) { var kind = String(obj.kind); if (kind !== \"class\") { throw new TypeError('A class descriptor\\'s .kind property must be \"class\", but a decorator' + ' created a class descriptor with .kind \"' + kind + '\"'); } this.disallowProperty(obj, \"key\", \"A class descriptor\"); this.disallowProperty(obj, \"placement\", \"A class descriptor\"); this.disallowProperty(obj, \"descriptor\", \"A class descriptor\"); this.disallowProperty(obj, \"initializer\", \"A class descriptor\"); this.disallowProperty(obj, \"extras\", \"A class descriptor\"); var finisher = _optionalCallableProperty(obj, \"finisher\"); var elements = this.toElementDescriptors(obj.elements); return { elements: elements, finisher: finisher }; }, runClassFinishers: function runClassFinishers(constructor, finishers) { for (var i = 0; i < finishers.length; i++) { var newConstructor = (0, finishers[i])(constructor); if (newConstructor !== undefined) { if (typeof newConstructor !== \"function\") { throw new TypeError(\"Finishers must return a constructor.\"); } constructor = newConstructor; } } return constructor; }, disallowProperty: function disallowProperty(obj, name, objectType) { if (obj[name] !== undefined) { throw new TypeError(objectType + \" can't have a .\" + name + \" property.\"); } } }; return api; }\n\nfunction _createElementDescriptor(def) { var key = _toPropertyKey(def.key); var descriptor; if (def.kind === \"method\") { descriptor = { value: def.value, writable: true, configurable: true, enumerable: false }; } else if (def.kind === \"get\") { descriptor = { get: def.value, configurable: true, enumerable: false }; } else if (def.kind === \"set\") { descriptor = { set: def.value, configurable: true, enumerable: false }; } else if (def.kind === \"field\") { descriptor = { configurable: true, writable: true, enumerable: true }; } var element = { kind: def.kind === \"field\" ? \"field\" : \"method\", key: key, placement: def.static ? \"static\" : def.kind === \"field\" ? \"own\" : \"prototype\", descriptor: descriptor }; if (def.decorators) element.decorators = def.decorators; if (def.kind === \"field\") element.initializer = def.value; return element; }\n\nfunction _coalesceGetterSetter(element, other) { if (element.descriptor.get !== undefined) { other.descriptor.get = element.descriptor.get; } else { other.descriptor.set = element.descriptor.set; } }\n\nfunction _coalesceClassElements(elements) { var newElements = []; var isSameElement = function isSameElement(other) { return other.kind === \"method\" && other.key === element.key && other.placement === element.placement; }; for (var i = 0; i < elements.length; i++) { var element = elements[i]; var other; if (element.kind === \"method\" && (other = newElements.find(isSameElement))) { if (_isDataDescriptor(element.descriptor) || _isDataDescriptor(other.descriptor)) { if (_hasDecorators(element) || _hasDecorators(other)) { throw new ReferenceError(\"Duplicated methods (\" + element.key + \") can't be decorated.\"); } other.descriptor = element.descriptor; } else { if (_hasDecorators(element)) { if (_hasDecorators(other)) { throw new ReferenceError(\"Decorators can't be placed on different accessors with for \" + \"the same property (\" + element.key + \").\"); } other.decorators = element.decorators; } _coalesceGetterSetter(element, other); } } else { newElements.push(element); } } return newElements; }\n\nfunction _hasDecorators(element) { return element.decorators && element.decorators.length; }\n\nfunction _isDataDescriptor(desc) { return desc !== undefined && !(desc.value === undefined && desc.writable === undefined); }\n\nfunction _optionalCallableProperty(obj, name) { var value = obj[name]; if (value !== undefined && typeof value !== \"function\") { throw new TypeError(\"Expected '\" + name + \"' to be a function\"); } return value; }\n\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\n\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nfunction _toArray(arr) { return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar dateCalcForm = document.getElementById(\"datecalc\");\nvar dateCalcResult = document.getElementById(\"datecalc__result\");\ndateCalcForm.addEventListener(\"submit\", handleCalcDates);\n\nfunction handleCalcDates(event) {\n  dateCalcResult.innerHTML = \"\";\n  event.preventDefault();\n  var _event$target$element = event.target.elements,\n      firstDate = _event$target$element.firstDate,\n      secondDate = _event$target$element.secondDate;\n  firstDate = firstDate.value, secondDate = secondDate.value;\n\n  if (firstDate && secondDate) {\n    var diff = (0, _datecalc.diffDates)(firstDate, secondDate);\n    dateCalcResult.innerHTML = (0, _datecalc.diffToHtml)(diff);\n  } else dateCalcResult.innerHTML = (0, _utils.formatError)(\"Для расчета промежутка необходимо заполнить оба поля\");\n}\n\nvar MyClass = _decorate([isTestable(true)], function (_initialize) {\n  var MyClass = function MyClass() {\n    _classCallCheck(this, MyClass);\n\n    _initialize(this);\n  };\n\n  return {\n    F: MyClass,\n    d: []\n  };\n});\n\nfunction isTestable(value) {\n  return function decorator(target) {\n    target.isTestable = value;\n  };\n}\n\nconsole.log(new MyClass());"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":3,"column":0},"source":"src/main.js","original":{"line":1,"column":0}},{"generated":{"line":5,"column":0},"source":"src/main.js","original":{"line":2,"column":0}},{"generated":{"line":43,"column":0},"source":"src/main.js","original":{"line":4,"column":0}},{"name":"dateCalcForm","generated":{"line":43,"column":4},"source":"src/main.js","original":{"line":4,"column":6}},{"generated":{"line":43,"column":16},"source":"src/main.js","original":{"line":4,"column":18}},{"name":"document","generated":{"line":43,"column":19},"source":"src/main.js","original":{"line":4,"column":21}},{"generated":{"line":43,"column":27},"source":"src/main.js","original":{"line":4,"column":29}},{"name":"getElementById","generated":{"line":43,"column":28},"source":"src/main.js","original":{"line":4,"column":30}},{"generated":{"line":43,"column":42},"source":"src/main.js","original":{"line":4,"column":21}},{"generated":{"line":43,"column":43},"source":"src/main.js","original":{"line":4,"column":45}},{"generated":{"line":43,"column":53},"source":"src/main.js","original":{"line":4,"column":21}},{"generated":{"line":43,"column":54},"source":"src/main.js","original":{"line":4,"column":0}},{"generated":{"line":44,"column":0},"source":"src/main.js","original":{"line":5,"column":0}},{"name":"dateCalcResult","generated":{"line":44,"column":4},"source":"src/main.js","original":{"line":5,"column":6}},{"generated":{"line":44,"column":18},"source":"src/main.js","original":{"line":5,"column":20}},{"name":"document","generated":{"line":44,"column":21},"source":"src/main.js","original":{"line":5,"column":23}},{"generated":{"line":44,"column":29},"source":"src/main.js","original":{"line":5,"column":31}},{"name":"getElementById","generated":{"line":44,"column":30},"source":"src/main.js","original":{"line":5,"column":32}},{"generated":{"line":44,"column":44},"source":"src/main.js","original":{"line":5,"column":23}},{"generated":{"line":44,"column":45},"source":"src/main.js","original":{"line":5,"column":47}},{"generated":{"line":44,"column":63},"source":"src/main.js","original":{"line":5,"column":23}},{"generated":{"line":44,"column":64},"source":"src/main.js","original":{"line":5,"column":0}},{"name":"dateCalcForm","generated":{"line":45,"column":0},"source":"src/main.js","original":{"line":7,"column":0}},{"generated":{"line":45,"column":12},"source":"src/main.js","original":{"line":7,"column":12}},{"name":"addEventListener","generated":{"line":45,"column":13},"source":"src/main.js","original":{"line":7,"column":13}},{"generated":{"line":45,"column":29},"source":"src/main.js","original":{"line":7,"column":0}},{"generated":{"line":45,"column":30},"source":"src/main.js","original":{"line":7,"column":30}},{"generated":{"line":45,"column":38},"source":"src/main.js","original":{"line":7,"column":0}},{"name":"handleCalcDates","generated":{"line":45,"column":40},"source":"src/main.js","original":{"line":7,"column":40}},{"generated":{"line":45,"column":55},"source":"src/main.js","original":{"line":7,"column":0}},{"generated":{"line":47,"column":0},"source":"src/main.js","original":{"line":9,"column":0}},{"name":"handleCalcDates","generated":{"line":47,"column":9},"source":"src/main.js","original":{"line":9,"column":9}},{"generated":{"line":47,"column":24},"source":"src/main.js","original":{"line":9,"column":0}},{"name":"event","generated":{"line":47,"column":25},"source":"src/main.js","original":{"line":9,"column":25}},{"generated":{"line":47,"column":30},"source":"src/main.js","original":{"line":9,"column":0}},{"generated":{"line":47,"column":32},"source":"src/main.js","original":{"line":9,"column":32}},{"name":"dateCalcResult","generated":{"line":48,"column":0},"source":"src/main.js","original":{"line":10,"column":4}},{"name":"dateCalcResult","generated":{"line":48,"column":2},"source":"src/main.js","original":{"line":10,"column":4}},{"generated":{"line":48,"column":16},"source":"src/main.js","original":{"line":10,"column":18}},{"name":"innerHTML","generated":{"line":48,"column":17},"source":"src/main.js","original":{"line":10,"column":19}},{"generated":{"line":48,"column":26},"source":"src/main.js","original":{"line":10,"column":4}},{"generated":{"line":48,"column":29},"source":"src/main.js","original":{"line":10,"column":31}},{"generated":{"line":48,"column":31},"source":"src/main.js","original":{"line":10,"column":4}},{"name":"event","generated":{"line":49,"column":0},"source":"src/main.js","original":{"line":11,"column":4}},{"name":"event","generated":{"line":49,"column":2},"source":"src/main.js","original":{"line":11,"column":4}},{"generated":{"line":49,"column":7},"source":"src/main.js","original":{"line":11,"column":9}},{"name":"preventDefault","generated":{"line":49,"column":8},"source":"src/main.js","original":{"line":11,"column":10}},{"generated":{"line":49,"column":22},"source":"src/main.js","original":{"line":11,"column":4}},{"generated":{"line":50,"column":0},"source":"src/main.js","original":{"line":9,"column":32}},{"name":"event","generated":{"line":50,"column":30},"source":"src/main.js","original":{"line":13,"column":36}},{"generated":{"line":50,"column":35},"source":"src/main.js","original":{"line":13,"column":41}},{"name":"target","generated":{"line":50,"column":36},"source":"src/main.js","original":{"line":13,"column":42}},{"generated":{"line":50,"column":42},"source":"src/main.js","original":{"line":13,"column":36}},{"name":"elements","generated":{"line":50,"column":43},"source":"src/main.js","original":{"line":13,"column":49}},{"generated":{"line":50,"column":51},"source":"src/main.js","original":{"line":9,"column":32}},{"generated":{"line":51,"column":0},"source":"src/main.js","original":{"line":9,"column":32}},{"name":"firstDate","generated":{"line":51,"column":6},"source":"src/main.js","original":{"line":13,"column":10}},{"generated":{"line":51,"column":15},"source":"src/main.js","original":{"line":9,"column":32}},{"name":"firstDate","generated":{"line":51,"column":40},"source":"src/main.js","original":{"line":13,"column":10}},{"generated":{"line":51,"column":49},"source":"src/main.js","original":{"line":9,"column":32}},{"generated":{"line":52,"column":0},"source":"src/main.js","original":{"line":9,"column":32}},{"name":"secondDate","generated":{"line":52,"column":6},"source":"src/main.js","original":{"line":13,"column":21}},{"generated":{"line":52,"column":16},"source":"src/main.js","original":{"line":9,"column":32}},{"name":"secondDate","generated":{"line":52,"column":41},"source":"src/main.js","original":{"line":13,"column":21}},{"generated":{"line":52,"column":51},"source":"src/main.js","original":{"line":9,"column":32}},{"name":"firstDate","generated":{"line":53,"column":0},"source":"src/main.js","original":{"line":14,"column":4}},{"name":"firstDate","generated":{"line":53,"column":2},"source":"src/main.js","original":{"line":14,"column":4}},{"generated":{"line":53,"column":11},"source":"src/main.js","original":{"line":14,"column":13}},{"name":"firstDate","generated":{"line":53,"column":14},"source":"src/main.js","original":{"line":14,"column":16}},{"generated":{"line":53,"column":23},"source":"src/main.js","original":{"line":14,"column":25}},{"name":"value","generated":{"line":53,"column":24},"source":"src/main.js","original":{"line":14,"column":26}},{"generated":{"line":53,"column":29},"source":"src/main.js","original":{"line":14,"column":4}},{"name":"secondDate","generated":{"line":53,"column":31},"source":"src/main.js","original":{"line":14,"column":33}},{"generated":{"line":53,"column":41},"source":"src/main.js","original":{"line":14,"column":43}},{"name":"secondDate","generated":{"line":53,"column":44},"source":"src/main.js","original":{"line":14,"column":46}},{"generated":{"line":53,"column":54},"source":"src/main.js","original":{"line":14,"column":56}},{"name":"value","generated":{"line":53,"column":55},"source":"src/main.js","original":{"line":14,"column":57}},{"generated":{"line":53,"column":60},"source":"src/main.js","original":{"line":14,"column":4}},{"generated":{"line":55,"column":0},"source":"src/main.js","original":{"line":16,"column":4}},{"name":"firstDate","generated":{"line":55,"column":6},"source":"src/main.js","original":{"line":16,"column":8}},{"generated":{"line":55,"column":15},"source":"src/main.js","original":{"line":16,"column":17}},{"name":"secondDate","generated":{"line":55,"column":19},"source":"src/main.js","original":{"line":16,"column":21}},{"generated":{"line":55,"column":29},"source":"src/main.js","original":{"line":16,"column":4}},{"generated":{"line":55,"column":31},"source":"src/main.js","original":{"line":16,"column":33}},{"generated":{"line":56,"column":0},"source":"src/main.js","original":{"line":17,"column":8}},{"name":"diff","generated":{"line":56,"column":8},"source":"src/main.js","original":{"line":17,"column":14}},{"generated":{"line":56,"column":12},"source":"src/main.js","original":{"line":17,"column":18}},{"generated":{"line":56,"column":15},"source":"src/main.js","original":{"line":17,"column":21}},{"name":"firstDate","generated":{"line":56,"column":40},"source":"src/main.js","original":{"line":17,"column":31}},{"generated":{"line":56,"column":49},"source":"src/main.js","original":{"line":17,"column":21}},{"name":"secondDate","generated":{"line":56,"column":51},"source":"src/main.js","original":{"line":17,"column":42}},{"generated":{"line":56,"column":61},"source":"src/main.js","original":{"line":17,"column":21}},{"generated":{"line":56,"column":62},"source":"src/main.js","original":{"line":17,"column":8}},{"name":"dateCalcResult","generated":{"line":57,"column":0},"source":"src/main.js","original":{"line":18,"column":8}},{"name":"dateCalcResult","generated":{"line":57,"column":4},"source":"src/main.js","original":{"line":18,"column":8}},{"generated":{"line":57,"column":18},"source":"src/main.js","original":{"line":18,"column":22}},{"name":"innerHTML","generated":{"line":57,"column":19},"source":"src/main.js","original":{"line":18,"column":23}},{"generated":{"line":57,"column":28},"source":"src/main.js","original":{"line":18,"column":8}},{"generated":{"line":57,"column":31},"source":"src/main.js","original":{"line":18,"column":35}},{"name":"diff","generated":{"line":57,"column":57},"source":"src/main.js","original":{"line":18,"column":46}},{"generated":{"line":57,"column":61},"source":"src/main.js","original":{"line":18,"column":35}},{"generated":{"line":57,"column":62},"source":"src/main.js","original":{"line":18,"column":8}},{"generated":{"line":58,"column":0},"source":"src/main.js","original":{"line":19,"column":5}},{"generated":{"line":58,"column":3},"source":"src/main.js","original":{"line":16,"column":4}},{"name":"dateCalcResult","generated":{"line":58,"column":9},"source":"src/main.js","original":{"line":20,"column":9}},{"generated":{"line":58,"column":23},"source":"src/main.js","original":{"line":20,"column":23}},{"name":"innerHTML","generated":{"line":58,"column":24},"source":"src/main.js","original":{"line":20,"column":24}},{"generated":{"line":58,"column":33},"source":"src/main.js","original":{"line":20,"column":9}},{"generated":{"line":58,"column":36},"source":"src/main.js","original":{"line":20,"column":36}},{"generated":{"line":58,"column":60},"source":"src/main.js","original":{"line":20,"column":48}},{"generated":{"line":58,"column":114},"source":"src/main.js","original":{"line":20,"column":36}},{"generated":{"line":58,"column":115},"source":"src/main.js","original":{"line":20,"column":9}},{"generated":{"line":59,"column":0},"source":"src/main.js","original":{"line":21,"column":1}},{"name":"MyClass","generated":{"line":61,"column":4},"source":"src/main.js","original":{"line":25,"column":6}},{"name":"isTestable","generated":{"line":61,"column":25},"source":"src/main.js","original":{"line":24,"column":1}},{"generated":{"line":61,"column":35},"source":"src/main.js","original":{"line":24,"column":11}},{"generated":{"line":61,"column":36},"source":"src/main.js","original":{"line":24,"column":12}},{"generated":{"line":61,"column":40},"source":"src/main.js","original":{"line":24,"column":11}},{"name":"MyClass","generated":{"line":62,"column":6},"source":"src/main.js","original":{"line":25,"column":6}},{"name":"MyClass","generated":{"line":69,"column":7},"source":"src/main.js","original":{"line":25,"column":6}},{"generated":{"line":74,"column":0},"source":"src/main.js","original":{"line":27,"column":0}},{"name":"isTestable","generated":{"line":74,"column":9},"source":"src/main.js","original":{"line":27,"column":9}},{"generated":{"line":74,"column":19},"source":"src/main.js","original":{"line":27,"column":0}},{"name":"value","generated":{"line":74,"column":20},"source":"src/main.js","original":{"line":27,"column":20}},{"generated":{"line":74,"column":25},"source":"src/main.js","original":{"line":27,"column":0}},{"generated":{"line":74,"column":27},"source":"src/main.js","original":{"line":27,"column":27}},{"generated":{"line":75,"column":0},"source":"src/main.js","original":{"line":28,"column":4}},{"generated":{"line":75,"column":9},"source":"src/main.js","original":{"line":28,"column":11}},{"name":"decorator","generated":{"line":75,"column":18},"source":"src/main.js","original":{"line":28,"column":20}},{"generated":{"line":75,"column":27},"source":"src/main.js","original":{"line":28,"column":11}},{"name":"target","generated":{"line":75,"column":28},"source":"src/main.js","original":{"line":28,"column":30}},{"generated":{"line":75,"column":34},"source":"src/main.js","original":{"line":28,"column":11}},{"generated":{"line":75,"column":36},"source":"src/main.js","original":{"line":28,"column":38}},{"name":"target","generated":{"line":76,"column":0},"source":"src/main.js","original":{"line":29,"column":8}},{"name":"target","generated":{"line":76,"column":4},"source":"src/main.js","original":{"line":29,"column":8}},{"generated":{"line":76,"column":10},"source":"src/main.js","original":{"line":29,"column":14}},{"name":"isTestable","generated":{"line":76,"column":11},"source":"src/main.js","original":{"line":29,"column":15}},{"generated":{"line":76,"column":21},"source":"src/main.js","original":{"line":29,"column":8}},{"name":"value","generated":{"line":76,"column":24},"source":"src/main.js","original":{"line":29,"column":28}},{"generated":{"line":76,"column":29},"source":"src/main.js","original":{"line":29,"column":8}},{"generated":{"line":77,"column":0},"source":"src/main.js","original":{"line":30,"column":5}},{"generated":{"line":77,"column":3},"source":"src/main.js","original":{"line":28,"column":4}},{"generated":{"line":78,"column":0},"source":"src/main.js","original":{"line":31,"column":1}},{"name":"console","generated":{"line":80,"column":0},"source":"src/main.js","original":{"line":33,"column":0}},{"generated":{"line":80,"column":7},"source":"src/main.js","original":{"line":33,"column":7}},{"name":"log","generated":{"line":80,"column":8},"source":"src/main.js","original":{"line":33,"column":8}},{"generated":{"line":80,"column":11},"source":"src/main.js","original":{"line":33,"column":0}},{"generated":{"line":80,"column":12},"source":"src/main.js","original":{"line":33,"column":12}},{"name":"MyClass","generated":{"line":80,"column":16},"source":"src/main.js","original":{"line":33,"column":16}},{"generated":{"line":80,"column":23},"source":"src/main.js","original":{"line":33,"column":12}},{"generated":{"line":80,"column":25},"source":"src/main.js","original":{"line":33,"column":0}}],"sources":{"src/main.js":"import { diffDates, diffToHtml } from \"./datecalc.js\";\nimport { formatError } from \"./utils.js\";\n\nconst dateCalcForm = document.getElementById(\"datecalc\");\nconst dateCalcResult = document.getElementById(\"datecalc__result\");\n\ndateCalcForm.addEventListener(\"submit\", handleCalcDates);\n\nfunction handleCalcDates(event) {\n    dateCalcResult.innerHTML = \"\";\n    event.preventDefault();\n\n    let { firstDate, secondDate } = event.target.elements;\n    firstDate = firstDate.value, secondDate = secondDate.value;\n\n    if (firstDate && secondDate) {\n        const diff = diffDates(firstDate, secondDate);\n        dateCalcResult.innerHTML = diffToHtml(diff);\n    }\n    else dateCalcResult.innerHTML = formatError(\"Для расчета промежутка необходимо заполнить оба поля\");\n}\n\n\n@isTestable(true)\nclass MyClass { }\n\nfunction isTestable(value) {\n    return function decorator(target) {\n        target.isTestable = value;\n    }\n}\n\nconsole.log(new MyClass())"},"lineCount":null}},"error":null,"hash":"7dd1d8c6576b700c647ff60856f72d0c","cacheData":{"env":{}}}